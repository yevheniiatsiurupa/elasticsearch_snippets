package com.elasticsearchsnippets.model;

import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.elasticsearch.annotations.Document;
import org.springframework.data.elasticsearch.annotations.Field;
import org.springframework.data.elasticsearch.annotations.FieldType;

@Document(indexName = "productindex", indexStoreType = "product")
@Data
@NoArgsConstructor
public class Product {

    /**
     * When using string type for id then it is automatically mapped to
     * corresponding field in ES and gets auto-generated value if null.
     *
     * In case you use Long, Integer, etc Spring cannot map autogenerated value to it.
     * So then you have to assign it yourself.
     *
     * In case you want to generate string id by yourself don't use uuid v4
     * (due to really bad performance). You might use uuid v1 (in binary or not) or search
     * for another options (nanotime, padded sequential numbers etc)
     */
    @Id
    private String id;

    /**
     * Use text field when need search system or autocomplete.
     * Engine performs initial analysis when save such field.
     */
    @Field(type = FieldType.Text, name = "name")
    private String name;

    @Field(type = FieldType.Double, name = "price")
    private Double price;

    @Field(type = FieldType.Integer, name = "quantity")
    private Integer quantity;

    /**
     * Use keyword field when need exact match query.
     * Engine doesn't perform initial analysis when save such field.
     */
    @Field(type = FieldType.Keyword, name = "category")
    private String category;

    @Field(type = FieldType.Text, name = "desc")
    private String description;

    @Field(type = FieldType.Keyword, name = "manufacturer")
    private String manufacturer;

}
